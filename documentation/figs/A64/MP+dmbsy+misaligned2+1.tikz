% auto generated by rmem
% Revision: b2ba91a31aad6663a436b086fec3ba602ebff2ba-dirty
% Command line: /home/shaked/rems/rmem/rmem -interactive false -eager true -hash_prune true -shallow_embedding true -pp_hex false -dot_final_ok true -graph_backend tikz -model flat -dot_dir figs/A64/ /home/shaked/rems/litmus-tests-regression-machinery/tests/AArch64/mixed-size/HAND/MP+dmbsy+misaligned2+1.litmus
% Model: [flat; not-restricted; flowing_same_address_strict; forbid_uncommitted_read; restart_on_read_satisfy; allow_tree_speculation; forbid_write_subsumption; allow_loops; promising_sequential_thread_state_search; use_old_coherence; propagate_at_end; promise_anytime]
% Litmus hash: f79241d9f0f692e66fa5a55356b5bf67
%
\begin{scope}[/litmus/thread=0,
  0-1/.events={a/.mem write={W x+1/1=0x11}},
  0-2/eiids/.initial={b},
  0-3/.events={c/.mem write={W x+2/1=0x22}},
]
  \node[/litmus/instructions] (instructions 0) {
    \node[/litmus/assem={0-1}] {\assem|STRB W1,[X5,#1]|}; \litmusendinst
    \node[/litmus/assem={0-2}] {\assem|DMB SY|}; \litmusendinst
    \node[/litmus/assem={0-3}] {\assem|STRB W2,[X5,#2]|}; \litmusendinst
  };

  % Thread 0 dependencies:
  \begin{scope}[/litmus/instruction relations]
    \path (0-1) edge[/litmus/dmb] (0-3);
  \end{scope}
\end{scope}

\begin{scope}[/litmus/thread=1,
  1-1/.events={d/.mem read={R x+2/1=0x22}},
  1-2/.events={
    e1/.mem read={R x+1/1=0},
    e0/.mem read={R x+2/1=0x22}
  },
]
  \node[/litmus/instructions] (instructions 1) {
    \node[/litmus/assem={1-1}] {\assem|LDRB W1,[X5,#2]|}; \litmusendinst
    \node[/litmus/assem={1-2}] {\assem|LDRH W2,[X5,W6,SXTW]|}; \litmusendinst
  };

  % Thread 1 dependencies:
  \begin{scope}[/litmus/instruction relations]
    \path (1-1) edge[/litmus/po] (1-2);
  \end{scope}
\end{scope}

\begin{scope}[/litmus/event relations]
  % read-from:
  \path (c) edge[/litmus/rf'={x}{2/2}] (d)
        (c) edge[/litmus/rf'={x}{2/2}] (e0)
        node[/litmus/init=e1] {} edge[/litmus/rf'={x}{1/1}] (e1);

  % from-read:
  \path (e1) edge[/litmus/fr] (a);
\end{scope}
